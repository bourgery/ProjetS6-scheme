#lang racket
(provide (all-defined-out))
(require "../Trunk/arbre_puissance.rkt")

(define (test-est-dedans)
  (begin (display "Debut du test pour savoir si un element est dans une liste de liste : ")
         (if (est-dedans 5 '((1 2 3) (4 5 6)))
             (display ".")
             (raise "Erreur"))
         (if (est-dedans 1 '((1)))
             (display ".")
             (raise "Erreur"))
         (if (est-dedans 2 '((1 3 6) (4 8 16)))
             (raise "Erreur")
             (display "."))
         (display "OK\n")))

(define (test-ajoute-elt)
  (begin (display "Debut du test de la creation des fils : ")
         (if (equal? (ajoute-elt '(1 2 3) '(1 2 3) '(()) '()) '((1 2 3 4) (1 2 3 5) (1 2 3 6)))
             (display ".")
             (raise "Erreur"))
         (if (equal? (ajoute-elt '(1 2 3) '(1 2 3) '((1 2 3 4) (1 2 3 5)) '()) '((1 2 3 6)))
             (display ".")
             (raise "Erreur"))
         (if (equal? (ajoute-elt '(1 2 3) '(1 2 3) '((1 2 3 4) (1 2 3 5) (1 2 3 6)) '()) '())
             (display ".")
             (raise "Erreur"))
         (display "OK\n")))

(define (test-gen-arbre)
  (begin (display "Debut du test de la creation d'arbre de puissance : ")
         (if (equal? (gen-arbre 3) '((1) (1 2) (1 2 3)))
             (display ".")
             (raise "Erreur"))
         (if (equal? (gen-arbre 8) '((1) (1 2) (1 2 3) (1 2 4) (1 2 3 5) (1 2 3 6) (1 2 4 8)))
             (display ".")
             (raise "Erreur"))
         (if (equal? (gen-arbre 15) '((1) 
                                      (1 2) 
                                      (1 2 3) (1 2 4) 
                                      (1 2 3 5) (1 2 3 6) (1 2 4 8) 
                                      (1 2 3 5 7) (1 2 3 5 10) (1 2 3 6 9) (1 2 3 6 12) (1 2 4 8 16) 
                                      (1 2 3 5 7 14) (1 2 3 5 10 11) (1 2 3 5 10 13) (1 2 3 5 10 15)))
             (display ".")
             (raise "Erreur"))
         (if (equal? (gen-arbre 17) '((1) 
                                     (1 2) 
                                     (1 2 3) (1 2 4) 
                                     (1 2 3 5) (1 2 3 6) (1 2 4 8) 
                                     (1 2 3 5 7) (1 2 3 5 10) (1 2 3 6 9) (1 2 3 6 12) (1 2 4 8 16) 
                                     (1 2 3 5 7 14) (1 2 3 5 10 11) (1 2 3 5 10 13) (1 2 3 5 10 15)))
             (raise "Erreur")
             (display "."))
         (display "OK\n")))
         

(test-est-dedans)
(test-ajoute-elt)
(test-gen-arbre)